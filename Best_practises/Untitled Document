Best Practices: 
1.Model
-Sử dụng named scope thay vì sử dụng câu lệnh where ở mọi nơi. nên đặt scope trong where để rõ nghĩa và dễ quản lý câu lệnh điều kiện trong đối tượng đó.
ví dụ: 
 scope :red, -> { where(color: 'red') }
 scope :football, -> {where(favorates: 'football')}

- sử dụng cấu trúc lambda trong scope
ví dụ: 
scope :today, → { where(published_date: Date.today) }
thay vì sử dụng:
scope :today, where(published_date: Date.today))

- Dựa vào yêu cầu thực tế mà sử dụng validation cho thích hợp. 
ví dụ:  validates :name, presence: true

- reject SQL injection để bảo mật dữ liệu người dùng khi truy xuất.
ví dụ: 
User.where("name = ?", params[:name])
instead of:
User.where("name = '#{params[:name]}'")

- luôn tạo các index trong model để dễ dàng quản lý việc truy xuất dữ liệu nhanh hơn. 
ví dụ: 
  add_index :public, :public_id

- sử dụng file seeds.rb thay vì migration để tạo các seed data 

- sử dụng includes để cải thiện N + 1 query giúp việc truy xuất dữ liệu ít tốn kém bộ nhớ hơn.
ví dụ: 

article = Article.order(published_at: :desc).includes(:authors)

- sử dụng từ khóa size thay vì count để đếm số lượng bản ghi. do count chỉ đếm số lượng bản ghi trong database. size thông minh hơn đếm số lương bản ghi đã lưu trong database, sẽ đếm luôn số lượng bản ghi trên bộ nhớ tạm cache.

- sử dụng find_each thay vì all.each để duyệt số lượng bản ghi lớn. vì all.each sẽ duyệt qua từng đối tượng, còn find_each sẽ truyền đối tượng với 1000 record rồi duyệt từng object trong 1000 record đó. tiếp tục thực hiện khi nào hết record trong đó. 

-chỉ sử dụng select các field cần thiết chứ không nên select * (lấy hết các record) để tránh tốn thời gian và xử lý trong bộ nhớ. 

- tránh sử dụng các câu lệnh SQL thô bên trong model của rails 

- luôn set gía trị mặc định cho boolean trong model
ví dụ: trung : boolean,  default: true
